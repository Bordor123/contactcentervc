{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Cursos/net/ContactCenterApp/contact-center-app/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl = process.env.NEXT_PUBLIC_API_BASE_URL;\r\n\r\nexport const getAgents = async () => {\r\n  return axios.get(`${apiUrl}/agents`);\r\n};\r\n\r\nexport const updateAgentStatus = async (id, status) => {\r\n  return axios.put(`${apiUrl}/agents/${id}/status`, { status });\r\n};\r\n\r\nexport const getClients = async () => {\r\n  return axios.get(`${apiUrl}/clients`);\r\n};\r\n\r\nexport const addClient = async (client) => {\r\n  return axios.post(`${apiUrl}/clients`, client);\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAM;AAEC,MAAM,YAAY;IACvB,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,OAAO,OAAO,CAAC;AACrC;AAEO,MAAM,oBAAoB,OAAO,IAAI;IAC1C,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,OAAO,QAAQ,EAAE,GAAG,OAAO,CAAC,EAAE;QAAE;IAAO;AAC7D;AAEO,MAAM,aAAa;IACxB,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,OAAO,QAAQ,CAAC;AACtC;AAEO,MAAM,YAAY,OAAO;IAC9B,OAAO,0GAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,CAAC,EAAE;AACzC"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Cursos/net/ContactCenterApp/contact-center-app/pages/clients.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getClients, addClient } from '../services/api';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ninterface Client {\r\n  id: number;\r\n  name: string;\r\n  joinedQueue: string;\r\n  waitTime: number;\r\n}\r\n\r\nconst Clients = () => {\r\n  const [clients, setClients] = useState<Client[]>([]);\r\n  const [filteredClients, setFilteredClients] = useState<Client[]>([]);\r\n  const [newClient, setNewClient] = useState({ name: '', joinedQueue: '' });\r\n  const [waitTimeFilter, setWaitTimeFilter] = useState<string>('all');\r\n\r\n  useEffect(() => {\r\n    async function fetchClients() {\r\n      const response = await getClients();\r\n      setClients(response.data);\r\n      setFilteredClients(response.data);\r\n    }\r\n    fetchClients();\r\n  }, []);\r\n\r\n  // Filtra los clientes por tiempo de espera usando el waitTime proporcionado por el servicio\r\n  useEffect(() => {\r\n    if (waitTimeFilter === 'all') {\r\n      setFilteredClients(clients);\r\n      return;\r\n    }\r\n    \r\n    const filtered = clients.filter(client => {\r\n      switch (waitTimeFilter) {\r\n        case 'lessThan5':\r\n          return client.waitTime < 5;\r\n        case '5to15':\r\n          return client.waitTime >= 5 && client.waitTime <= 15;\r\n        case 'moreThan15':\r\n          return client.waitTime > 15;\r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n    \r\n    setFilteredClients(filtered);\r\n  }, [waitTimeFilter, clients]);\r\n\r\n  const handleAddClient = async () => {\r\n    const response = await addClient(newClient);\r\n    setClients([...clients, response.data]);\r\n    setNewClient({ name: '', joinedQueue: '' });\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex align-items-center justify-content-center min-vh-100\">\r\n      <div className=\"w-100\" style={{ maxWidth: '800px' }}>\r\n        <h1 className=\"text-center mb-4\">Clientes</h1>\r\n\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"mb-0\">Filtrar por tiempo de espera</h5>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex gap-2\">\r\n              <button \r\n                className={`btn ${waitTimeFilter === 'all' ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                onClick={() => setWaitTimeFilter('all')}\r\n              >\r\n                Todos\r\n              </button>\r\n              <button \r\n                className={`btn ${waitTimeFilter === 'lessThan5' ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                onClick={() => setWaitTimeFilter('lessThan5')}\r\n              >\r\n                &lt; 5 min\r\n              </button>\r\n              <button \r\n                className={`btn ${waitTimeFilter === '5to15' ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                onClick={() => setWaitTimeFilter('5to15')}\r\n              >\r\n                5-15 min\r\n              </button>\r\n              <button \r\n                className={`btn ${waitTimeFilter === 'moreThan15' ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                onClick={() => setWaitTimeFilter('moreThan15')}\r\n              >\r\n                &gt; 15 min\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"card mb-4\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"mb-0\">Lista de Clientes</h5>\r\n          </div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {filteredClients.map(client => {\r\n              let badgeClass = \"bg-success\";\r\n              \r\n              if (client.waitTime > 15) {\r\n                badgeClass = \"bg-danger\";\r\n              } else if (client.waitTime > 5) {\r\n                badgeClass = \"bg-warning\";\r\n              }\r\n              \r\n              return (\r\n                <li key={client.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  <span>{client.name}</span>\r\n                  <div>\r\n                    <span className=\"text-muted me-2\">Desde: {formatDate(client.joinedQueue)}</span>\r\n                    <span className={`badge ${badgeClass}`}>\r\n                      {client.waitTime} minutos\r\n                    </span>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        \r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"mb-0\">Agregar Cliente</h5>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"clientName\" className=\"form-label\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"clientName\"\r\n                value={newClient.name}\r\n                onChange={(e) => setNewClient({ ...newClient, name: e.target.value })}\r\n                placeholder=\"Nombre del cliente\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"joinDate\" className=\"form-label\">Fecha de Ingreso</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                id=\"joinDate\"\r\n                value={newClient.joinedQueue.split('T')[0]}\r\n                onChange={(e) => setNewClient({ ...newClient, joinedQueue: e.target.value })}\r\n              />\r\n            </div>\r\n            <button \r\n              onClick={handleAddClient} \r\n              className=\"btn btn-primary\"\r\n            >\r\n              Agregar Cliente\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clients;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}