{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Cursos/net/ContactCenterApp/contact-center-app/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl = process.env.NEXT_PUBLIC_API_BASE_URL;\r\n\r\nexport const getAgents = async () => {\r\n  return axios.get(`${apiUrl}/agents`);\r\n};\r\n\r\nexport const updateAgentStatus = async (id, status) => {\r\n  return axios.put(`${apiUrl}/agents/${id}/status`, { status });\r\n};\r\n\r\nexport const getClients = async () => {\r\n  return axios.get(`${apiUrl}/clients`);\r\n};\r\n\r\nexport const addClient = async (client) => {\r\n  return axios.post(`${apiUrl}/clients`, client);\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAM;AAEC,MAAM,YAAY;IACvB,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,OAAO,OAAO,CAAC;AACrC;AAEO,MAAM,oBAAoB,OAAO,IAAI;IAC1C,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,OAAO,QAAQ,EAAE,GAAG,OAAO,CAAC,EAAE;QAAE;IAAO;AAC7D;AAEO,MAAM,aAAa;IACxB,OAAO,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,OAAO,QAAQ,CAAC;AACtC;AAEO,MAAM,YAAY,OAAO;IAC9B,OAAO,0GAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,CAAC,EAAE;AACzC"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Cursos/net/ContactCenterApp/contact-center-app/pages/agents.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getAgents, updateAgentStatus } from '../services/api';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ninterface Agent {\r\n  id: number;\r\n  name: string;\r\n  status: number;\r\n  waitTime?: number;\r\n}\r\n\r\nconst Agents = () => {\r\n  const [agents, setAgents] = useState<Agent[]>([]);\r\n  const [filteredAgents, setFilteredAgents] = useState<Agent[]>([]);\r\n  const [statusFilter, setStatusFilter] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchAgents() {\r\n      const response = await getAgents();\r\n      const agentsWithWaitTime = response.data.map((agent: Agent) => ({\r\n        ...agent,\r\n        waitTime: agent.waitTime || Math.floor(Math.random() * 60)\r\n      }));\r\n      setAgents(agentsWithWaitTime);\r\n      setFilteredAgents(agentsWithWaitTime);\r\n    }\r\n    fetchAgents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (statusFilter === null) {\r\n      setFilteredAgents(agents);\r\n    } else {\r\n      setFilteredAgents(agents.filter(agent => agent.status === statusFilter));\r\n    }\r\n  }, [statusFilter, agents]);\r\n\r\n  const handleStatusChange = async (id: number, status: number) => {\r\n    await updateAgentStatus(id, status);\r\n    const updatedAgents = agents.map(agent =>\r\n      agent.id === id ? { ...agent, status } : agent\r\n    );\r\n    setAgents(updatedAgents);\r\n  };\r\n\r\n  const getStatusText = (status: number): string => {\r\n    switch (status) {\r\n      case 1: return 'Disponible';\r\n      case 2: return 'En Llamada';\r\n      default: return 'Desconocido';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex align-items-center justify-content-center min-vh-100\">\r\n      <div className=\"w-100\" style={{ maxWidth: '800px' }}>\r\n        <h1 className=\"text-center mb-4\">Agentes</h1>\r\n        \r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"mb-0\">Filtros</h5>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex gap-2\">\r\n              <button \r\n                className={`btn ${statusFilter === null ? 'btn-primary' : 'btn-outline-primary'}`} \r\n                onClick={() => setStatusFilter(null)}\r\n              >\r\n                Todos\r\n              </button>\r\n              <button \r\n                className={`btn ${statusFilter === 1 ? 'btn-success' : 'btn-outline-success'}`} \r\n                onClick={() => setStatusFilter(1)}\r\n              >\r\n                Disponibles\r\n              </button>\r\n              <button \r\n                className={`btn ${statusFilter === 2 ? 'btn-warning' : 'btn-outline-warning'}`} \r\n                onClick={() => setStatusFilter(2)}\r\n              >\r\n                En Llamada\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <ul className=\"list-group p-0\">\r\n          {filteredAgents.map(agent => (\r\n            <li key={agent.id} className=\"list-group-item d-flex justify-content-between align-items-center mb-2\">\r\n              <div>\r\n                <div><strong>{agent.name}</strong></div>\r\n                <div>\r\n                  <span className={`badge ${agent.status === 1 ? 'bg-success' : 'bg-warning'} me-2`}>\r\n                    {getStatusText(agent.status)}\r\n                  </span>\r\n                  <span className=\"text-muted\">\r\n                    Tiempo en espera: {agent.waitTime} min\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button \r\n                  className=\"btn btn-success btn-sm me-2\" \r\n                  onClick={() => handleStatusChange(agent.id, 1)}\r\n                  disabled={agent.status === 1}\r\n                >\r\n                  Disponible\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-warning btn-sm\" \r\n                  onClick={() => handleStatusChange(agent.id, 2)}\r\n                  disabled={agent.status === 2}\r\n                >\r\n                  En Llamada\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Agents;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}